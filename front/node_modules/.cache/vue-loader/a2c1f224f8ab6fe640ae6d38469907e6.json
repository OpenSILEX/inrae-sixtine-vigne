{"remainingRequest":"/home/charlero/GIT/GITLAB/opensilex-dev/inrae-sixtine/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/charlero/GIT/GITLAB/opensilex-dev/inrae-sixtine/front/src/components/layout/ResetPassword.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/charlero/GIT/GITLAB/opensilex-dev/inrae-sixtine/front/src/components/layout/ResetPassword.vue","mtime":1636714207126},{"path":"/home/charlero/GIT/GITLAB/opensilex-dev/inrae-sixtine/front/node_modules/cache-loader/dist/cjs.js","mtime":1635245896600},{"path":"/home/charlero/GIT/GITLAB/opensilex-dev/inrae-sixtine/front/node_modules/thread-loader/dist/cjs.js","mtime":1635245896598},{"path":"/home/charlero/GIT/GITLAB/opensilex-dev/inrae-sixtine/front/node_modules/babel-loader/lib/index.js","mtime":1635246894104},{"path":"/home/charlero/GIT/GITLAB/opensilex-dev/inrae-sixtine/front/node_modules/ts-loader/index.js","mtime":1635245901572},{"path":"/home/charlero/GIT/GITLAB/opensilex-dev/inrae-sixtine/front/node_modules/cache-loader/dist/cjs.js","mtime":1635245896600},{"path":"/home/charlero/GIT/GITLAB/opensilex-dev/inrae-sixtine/front/node_modules/vue-loader/lib/index.js","mtime":1635246896232}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgeyBDb21wb25lbnQsIFJlZiB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgVnVlIGZyb20gInZ1ZSI7CmltcG9ydCBPcGVuU2lsZXhWdWVQbHVnaW4gZnJvbSAiLi4vLi4vLi4vLi4vLi4vb3BlbnNpbGV4LWZyb250L2Zyb250L3NyYy9tb2RlbHMvT3BlblNpbGV4VnVlUGx1Z2luIjsKLy8gQHRzLWlnbm9yZQppbXBvcnQgeyBBdXRoZW50aWNhdGlvblNlcnZpY2UgfSBmcm9tICJvcGVuc2lsZXgtc2VjdXJpdHkvaW5kZXgiOwovLyBAdHMtaWdub3JlCmltcG9ydCBIdHRwUmVzcG9uc2UsIHsgT3BlblNpbGV4UmVzcG9uc2UgfSBmcm9tICJvcGVuc2lsZXgtc2VjdXJpdHkvSHR0cFJlc3BvbnNlIjsKCkBDb21wb25lbnQKZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVzZXRQYXNzd29yZCBleHRlbmRzIFZ1ZSB7CiAgJHQ6IGFueTsKICAkc3RvcmU6IGFueTsKICAkcm91dGVyOiBhbnk7CiAgc2VydmljZTogQXV0aGVudGljYXRpb25TZXJ2aWNlOwoKICBwYXNzd29yZFRva2VuOiBhbnkgPSBudWxsOwogIHBhc3N3b3JkOiBzdHJpbmcgPSBudWxsOwogIGNvbmZpcm1hdGlvbjogc3RyaW5nID0gbnVsbDsKICBiYWRUb2tlbiA9IGZhbHNlOwoKICAkb3BlbnNpbGV4OiBPcGVuU2lsZXhWdWVQbHVnaW47CgogIEBSZWYoInZhbGlkYXRvclJlZiIpIHJlYWRvbmx5IHZhbGlkYXRvclJlZiE6IGFueTsKCiAgZ2V0IHVzZXIoKSB7CiAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudXNlcjsKICB9CgogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnNlcnZpY2UgPSB0aGlzLiRvcGVuc2lsZXguZ2V0U2VydmljZSgKICAgICAgIm9wZW5zaWxleC1zZWN1cml0eS5BdXRoZW50aWNhdGlvblNlcnZpY2UiCiAgICApOwogIH0KCiAgbW91bnRlZCgpIHsKICAgIHRoaXMucGFzc3dvcmRUb2tlbiA9IGRlY29kZVVSSUNvbXBvbmVudCh0aGlzLiRyb3V0ZXIucGFyYW1zLnVyaSk7CiAgICBpZiAodGhpcy5wYXNzd29yZFRva2VuID09IG51bGwgfHwgdGhpcy5wYXNzd29yZFRva2VuID09IHVuZGVmaW5lZCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IHBhdGg6ICIvIiB9KTsKICAgIH0KICAgIGNvbnNvbGUuZGVidWcoIlJlbmV3IHRva2VuIDoiICsgdGhpcy5wYXNzd29yZFRva2VuKTsKICAgIC8vIHRlc3QgaWYgcmVuZXcgdG9rZW4gZXhpc3QKICAgIHRoaXMuc2VydmljZQogICAgICAucmVuZXdQYXNzd29yZCh0aGlzLnBhc3N3b3JkVG9rZW4sIHRydWUsIHRoaXMucGFzc3dvcmQpCiAgICAgIC50aGVuKChodHRwOiBIdHRwUmVzcG9uc2U8T3BlblNpbGV4UmVzcG9uc2U8YW55Pj4pID0+IHsKICAgICAgICBjb25zb2xlLmRlYnVnKCJSZW5ldyB0b2tlbiBleGlzdCIpOwogICAgICB9KQogICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgY29uc29sZS5kZWJ1ZyhlcnJvcik7CiAgICAgICAgaWYgKGVycm9yLnN0YXR1cyA9PSA0MDMgfHwgZXJyb3Iuc3RhdHVzID09IDUwMCkgewogICAgICAgICAgY29uc29sZS5lcnJvcigiSW52YWxpZCBjcmVkZW50aWFscyIsIGVycm9yKTsKICAgICAgICAgIHRoaXMuJG9wZW5zaWxleC5lcnJvckhhbmRsZXIoCiAgICAgICAgICAgIGVycm9yLAogICAgICAgICAgICB0aGlzLiR0KCJjb21wb25lbnQubG9naW4uZXJyb3JzLmludmFsaWQtY3JlZGVudGlhbHMiKQogICAgICAgICAgKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKGVycm9yLnN0YXR1cyA9PSA0MDApIHsKICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhlcnJvcik7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIkJhZCB0b2tlbiIsIGVycm9yKTsKICAgICAgICAgICAgdGhpcy5iYWRUb2tlbiA9IHRydWU7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLiRvcGVuc2lsZXguZXJyb3JIYW5kbGVyKGVycm9yKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogIH0KCiAgc3RhdGljIGFzeW5jIGFzeW5jSW5pdCgkb3BlbnNpbGV4OiBPcGVuU2lsZXhWdWVQbHVnaW4pIHsKICAgIGF3YWl0ICRvcGVuc2lsZXgubG9hZFNlcnZpY2UoIm9wZW5zaWxleC1zZWN1cml0eS5BdXRoZW50aWNhdGlvblNlcnZpY2UiKTsKICB9IAoKICBvblJlc2V0UGFzc3dvcmQoKSB7CiAgICBsZXQgdmFsaWRhdG9yUmVmOiBhbnkgPSB0aGlzLnZhbGlkYXRvclJlZjsKICAgIHZhbGlkYXRvclJlZi52YWxpZGF0ZSgpLnRoZW4oKGlzVmFsaWQpID0+IHsKICAgICAgaWYgKGlzVmFsaWQpIHsKICAgICAgICBpZiAodGhpcy5wYXNzd29yZFRva2VuKSB7CiAgICAgICAgICB0aGlzLnJlbmV3UGFzc3dvcmQoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0KCiAgcmVuZXdQYXNzd29yZCgpIHsKICAgIGNvbnNvbGUubG9nKHRoaXMucGFzc3dvcmRUb2tlbiwgZmFsc2UsIHRoaXMucGFzc3dvcmQpOwogICAgdGhpcy5zZXJ2aWNlCiAgICAgIC5yZW5ld1Bhc3N3b3JkKHRoaXMucGFzc3dvcmRUb2tlbiwgZmFsc2UsIHRoaXMucGFzc3dvcmQpCiAgICAgIC50aGVuKChodHRwOiBIdHRwUmVzcG9uc2U8T3BlblNpbGV4UmVzcG9uc2U8YW55Pj4pID0+IHsKICAgICAgICB0aGlzLiRvcGVuc2lsZXguc2hvd1N1Y2Nlc3NUb2FzdFdpdGhEZWxheSgKICAgICAgICAgIHRoaXMuJHQoIlJlc2V0UGFzc3dvcmRDb21wb25lbnQucmVuZXctcGFzc3dvcmQiKSwKICAgICAgICAgIDUwMDAKICAgICAgICApOwogICAgICAgIHRoaXMucGFzc3dvcmRUb2tlbiA9IG51bGw7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiAiLyIgfSk7CiAgICAgIH0pCiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICBjb25zb2xlLmRlYnVnKGVycm9yKTsKCiAgICAgICAgaWYgKGVycm9yLnN0YXR1cyA9PSA0MDApIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIkludmFsaWQgY3JlZGVudGlhbHMiLCBlcnJvcik7CiAgICAgICAgICB0aGlzLiRvcGVuc2lsZXguZXJyb3JIYW5kbGVyKAogICAgICAgICAgICBlcnJvciwKICAgICAgICAgICAgdGhpcy4kdCgiY29tcG9uZW50LmxvZ2luLmVycm9ycy5pbnZhbGlkLXRva2VuIikKICAgICAgICAgICk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJG9wZW5zaWxleC5lcnJvckhhbmRsZXIoZXJyb3IpOwogICAgICAgIH0KICAgICAgICB0aGlzLiRvcGVuc2lsZXguaGlkZUxvYWRlcigpOwogICAgICB9KTsKICB9Cn0K"},{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResetPassword.vue","sourceRoot":"src/components/layout","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <b-row>\n      <b-col></b-col>\n      <b-col cols=\"8\">\n        <h2>{{ $t(\"ResetPasswordComponent.title\") }}</h2>\n        <br />\n        <div v-if=\"!badToken\">\n          <ValidationObserver ref=\"validatorRef\">\n            <b-form @submit.prevent=\"onResetPassword\">\n              <opensilex-InputForm\n                :value.sync=\"password\"\n                label=\"ResetPasswordComponent.new-password\"\n                type=\"password\"\n                vid=\"password-first\"\n                :required=\"true\"\n                placeholder=\"component.user.form-password-placeholder\"\n                autocomplete=\"new-password\"\n              ></opensilex-InputForm>\n              <opensilex-InputForm\n                :value.sync=\"confirmation\"\n                label=\"ResetPasswordComponent.confirm-password\"\n                vid=\"confirmation\"\n                type=\"password\"\n                :required=\"true\"\n                rules=\"required|confirmed:password-first\"\n                placeholder=\"component.user.form-password-placeholder\"\n                autocomplete=\"new-password\"\n              ></opensilex-InputForm>\n\n              <div class=\"sign-btn text-center\">\n                <b-button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  v-text=\"$t('ResetPasswordComponent.reset-password')\"\n                ></b-button>\n              </div>\n            </b-form>\n          </ValidationObserver>\n        </div>\n        <div v-else>\n          <h4>\n            <b-alert variant=\"warning\" show>{{\n              $t(\"ResetPasswordComponent.bad-token\")\n            }}</b-alert>\n          </h4>\n\n          <p v-html=\"$t('ResetPasswordComponent.bad-token-info')\"></p>\n          <router-link :to=\"{ path: '/' }\"\n            ><b-button\n              variant=\"secondary\"\n              v-text=\"$t('ForgotPasswordComponent.returnHome')\"\n            ></b-button\n          ></router-link>\n        </div>\n      </b-col>\n      <b-col cols=\"3\"></b-col>\n    </b-row>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Ref } from \"vue-property-decorator\";\nimport Vue from \"vue\";\nimport OpenSilexVuePlugin from \"../../../../../opensilex-front/front/src/models/OpenSilexVuePlugin\";\n// @ts-ignore\nimport { AuthenticationService } from \"opensilex-security/index\";\n// @ts-ignore\nimport HttpResponse, { OpenSilexResponse } from \"opensilex-security/HttpResponse\";\n\n@Component\nexport default class ResetPassword extends Vue {\n  $t: any;\n  $store: any;\n  $router: any;\n  service: AuthenticationService;\n\n  passwordToken: any = null;\n  password: string = null;\n  confirmation: string = null;\n  badToken = false;\n\n  $opensilex: OpenSilexVuePlugin;\n\n  @Ref(\"validatorRef\") readonly validatorRef!: any;\n\n  get user() {\n    return this.$store.state.user;\n  }\n\n  created() {\n    this.service = this.$opensilex.getService(\n      \"opensilex-security.AuthenticationService\"\n    );\n  }\n\n  mounted() {\n    this.passwordToken = decodeURIComponent(this.$router.params.uri);\n    if (this.passwordToken == null || this.passwordToken == undefined) {\n      this.$router.push({ path: \"/\" });\n    }\n    console.debug(\"Renew token :\" + this.passwordToken);\n    // test if renew token exist\n    this.service\n      .renewPassword(this.passwordToken, true, this.password)\n      .then((http: HttpResponse<OpenSilexResponse<any>>) => {\n        console.debug(\"Renew token exist\");\n      })\n      .catch((error) => {\n        console.debug(error);\n        if (error.status == 403 || error.status == 500) {\n          console.error(\"Invalid credentials\", error);\n          this.$opensilex.errorHandler(\n            error,\n            this.$t(\"component.login.errors.invalid-credentials\")\n          );\n        } else {\n          if (error.status == 400) {\n            console.debug(error);\n            console.error(\"Bad token\", error);\n            this.badToken = true;\n          } else {\n            this.$opensilex.errorHandler(error);\n          }\n        }\n      });\n  }\n\n  static async asyncInit($opensilex: OpenSilexVuePlugin) {\n    await $opensilex.loadService(\"opensilex-security.AuthenticationService\");\n  } \n\n  onResetPassword() {\n    let validatorRef: any = this.validatorRef;\n    validatorRef.validate().then((isValid) => {\n      if (isValid) {\n        if (this.passwordToken) {\n          this.renewPassword();\n        }\n      }\n    });\n  }\n\n  renewPassword() {\n    console.log(this.passwordToken, false, this.password);\n    this.service\n      .renewPassword(this.passwordToken, false, this.password)\n      .then((http: HttpResponse<OpenSilexResponse<any>>) => {\n        this.$opensilex.showSuccessToastWithDelay(\n          this.$t(\"ResetPasswordComponent.renew-password\"),\n          5000\n        );\n        this.passwordToken = null;\n        this.$router.push({ path: \"/\" });\n      })\n      .catch((error) => {\n        console.debug(error);\n\n        if (error.status == 400) {\n          console.error(\"Invalid credentials\", error);\n          this.$opensilex.errorHandler(\n            error,\n            this.$t(\"component.login.errors.invalid-token\")\n          );\n        } else {\n          this.$opensilex.errorHandler(error);\n        }\n        this.$opensilex.hideLoader();\n      });\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n</style>\n\n<i18n>\nen:\n  ResetPasswordComponent:\n    bad-token : The url is not valid. \n    bad-token-info: \"Attempt to renew your password again or <br>\n                     Contact the system administrator.\"\n    title: Password renewal\n    new-password: Define a new password\n    confirm-password: Confirmez votre mot de passe\n    reset-password: Save and go to home\n    renew-password: Your password has been successfully modify\n\nfr:\n  ResetPasswordComponent:\n    bad-token : L'url saise n'est pas valide.\n    bad-token-info: \"\n                Tenter de renouveller à nouveau votre mot de passe ou <br>\n                Contactez l'administrateur du système.  \" \n    title: Renouvellement de nouveau mot de passe\n    new-password: Saisissez un nouveau mot de passe\n    confirm-password: Confirmez votre mot de passe\n    reset-password: Enregister et revenir à l'acceuil\n    renew-password: Votre mot de passe a bien été mis à jour\n\n</i18n>\n"]}]}